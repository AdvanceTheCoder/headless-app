{"ast":null,"code":"import _regeneratorRuntime from \"/Users/advance/projects/reactProjects/headless-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/advance/projects/reactProjects/headless-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport api_config from './api_config';\nvar singleton = null; // a singleton instance of axios that the default init function returns\n// note the 'async' keyword, it allows us to call 'await' later\n\nexport default\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var tokenURL, response, csrf_token;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (singleton) {\n            _context.next = 14;\n            break;\n          }\n\n          tokenURL = api_config.drupal_url + '/api/v1/articles/list';\n          _context.prev = 2;\n          _context.next = 5;\n          return axios.get(tokenURL, {\n            withCredentials: true // required to send auth cookie\n\n          });\n\n        case 5:\n          response = _context.sent;\n          csrf_token = response.data;\n          singleton = axios.create({\n            baseURL: api_config.drupal_url,\n            // every request is relative to this URL\n            withCredentials: true,\n            // include auth cookie in every request\n            headers: {\n              'X-CSRF-Token': csrf_token\n            },\n            // include this header in every request\n            params: {\n              _format: 'json'\n            } // add these query params to every request\n\n          });\n          console.log('Created new axios instance', singleton);\n          _context.next = 14;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](2);\n          console.error(_context.t0);\n\n        case 14:\n          return _context.abrupt(\"return\", singleton);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, this, [[2, 11]]);\n}));","map":{"version":3,"sources":["/Users/advance/projects/reactProjects/headless-app/src/Components/ajax.js"],"names":["axios","api_config","singleton","tokenURL","drupal_url","get","withCredentials","response","csrf_token","data","create","baseURL","headers","params","_format","console","log","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,IAAIC,SAAS,GAAG,IAAhB,C,CAAqB;AAErB;;AACA;AAAA;AAAA;AAAA;AAAA,yBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACTA,SADS;AAAA;AAAA;AAAA;;AAELC,UAAAA,QAFK,GAEMF,UAAU,CAACG,UAAX,GAAwB,uBAF9B;AAAA;AAAA;AAAA,iBAIcJ,KAAK,CAACK,GAAN,CAAUF,QAAV,EAAoB;AACzCG,YAAAA,eAAe,EAAE,IADwB,CACnB;;AADmB,WAApB,CAJd;;AAAA;AAIHC,UAAAA,QAJG;AAOHC,UAAAA,UAPG,GAOUD,QAAQ,CAACE,IAPnB;AAQTP,UAAAA,SAAS,GAAGF,KAAK,CAACU,MAAN,CAAa;AACvBC,YAAAA,OAAO,EAAEV,UAAU,CAACG,UADG;AACS;AAChCE,YAAAA,eAAe,EAAE,IAFM;AAEA;AACvBM,YAAAA,OAAO,EAAE;AAAE,8BAAgBJ;AAAlB,aAHc;AAGkB;AACzCK,YAAAA,MAAM,EAAE;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAJe,CAIM;;AAJN,WAAb,CAAZ;AAMAC,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0Cd,SAA1C;AAdS;AAAA;;AAAA;AAAA;AAAA;AAgBTa,UAAAA,OAAO,CAACE,KAAR;;AAhBS;AAAA,2CAmBNf,SAnBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import axios from 'axios'\nimport api_config from './api_config'\n\nlet singleton = null // a singleton instance of axios that the default init function returns\n\n// note the 'async' keyword, it allows us to call 'await' later\nexport default async () => {\n  if(!singleton) {\n    const tokenURL = api_config.drupal_url + '/api/v1/articles/list';\n    try {\n      const response = await axios.get(tokenURL, {\n        withCredentials: true // required to send auth cookie\n      })\n      const csrf_token = response.data\n      singleton = axios.create({\n        baseURL: api_config.drupal_url, // every request is relative to this URL\n        withCredentials: true, // include auth cookie in every request\n        headers: { 'X-CSRF-Token': csrf_token }, // include this header in every request\n        params: { _format: 'json' }, // add these query params to every request\n      })\n      console.log('Created new axios instance', singleton)\n    } catch(error) {\n      console.error(error)\n    }\n  }\n  return singleton\n}\n"]},"metadata":{},"sourceType":"module"}