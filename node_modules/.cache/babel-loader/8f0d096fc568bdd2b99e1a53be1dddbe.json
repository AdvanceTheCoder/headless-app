{"ast":null,"code":"import _regeneratorRuntime from \"/Users/advance/projects/reactProjects/headless-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/advance/projects/reactProjects/headless-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/advance/projects/reactProjects/headless-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/advance/projects/reactProjects/headless-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/advance/projects/reactProjects/headless-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/advance/projects/reactProjects/headless-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/advance/projects/reactProjects/headless-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/advance/projects/reactProjects/headless-app/src/Components/Elements/Articles/Article.jsx\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport './Article.css';\n\nvar Article =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Article, _Component);\n\n  function Article() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Article);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Article)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      articles: [],\n      article_title: '',\n      article_body: ''\n    };\n    return _this;\n  }\n\n  _createClass(Article, [{\n    key: \"refresh\",\n    value: function () {\n      var _refresh = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _axios, response;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return ajax();\n\n              case 3:\n                _axios = _context.sent;\n                _context.next = 6;\n                return _axios.get('/node/rest');\n\n              case 6:\n                response = _context.sent;\n\n                // wait for the POST AJAX request to complete\n                if (response.data) {\n                  // setState will trigger repaint\n                  this.setState({\n                    nodes: response.data\n                  });\n                }\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                alert(_context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 10]]);\n      }));\n\n      return function refresh() {\n        return _refresh.apply(this, arguments);\n      };\n    }() // fetchArticle = (nid) =>{\n    //     let id;\n    //     if (nid !== undefined) {\n    //       id = nid;\n    //     }\n    //     else if (this.props.match.params.id !== undefined) {\n    //       id = this.props.match.params.id;\n    //     }\n    //     else {\n    //       id = 40;\n    //     }\n    //     this.serverRequest = axios.get('http://backenddrupal.test/' + id + '?_format=json')\n    //     .then(function(result){\n    //       let body = result.data.body[\"0\"].value;\n    //       this.setState({\n    //         article_title: result.data.title[\"0\"].value,\n    //         article_body: body.replace('/sites/default/files', 'http://nohead.test/sites/default/files')\n    //       });\n    //     })\n    //   }\n    //   fetchArticleTitles = () =>{\n    //     this.serverRequest = axios.get('http://backenddrupal.test/api/v1/articles/list')\n    //     .then(function(result){\n    //       this.setState({\n    //         articles: result.data\n    //       });\n    //     })\n    //   }\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchArticleTitles();\n      this.fetchArticle();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rows = [];\n      this.state.articles.forEach(function (article, index) {\n        if (article.title.toLowerCase().indexOf(this.state.keyword.toLowerCase()) !== -1) {\n          var path = '/articles/' + article.nid;\n          rows.push(React.createElement(NavLink, {\n            key: article.nid,\n            \"data-value\": article.nid,\n            onClick: this.updateSelectedArticle,\n            to: path,\n            className: \"list-group-item list-group-item-action\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, article.title));\n        }\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, rows), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.state.article_title, this.state.article_body)));\n    }\n  }]);\n\n  return Article;\n}(Component);\n\n;\nexport default Article;","map":{"version":3,"sources":["/Users/advance/projects/reactProjects/headless-app/src/Components/Elements/Articles/Article.jsx"],"names":["React","Component","NavLink","axios","Article","state","articles","article_title","article_body","ajax","get","response","data","setState","nodes","alert","fetchArticleTitles","fetchArticle","rows","forEach","article","index","title","toLowerCase","indexOf","keyword","path","nid","push","updateSelectedArticle"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;IAEMC,O;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,aAAa,EAAE,EAFX;AAGJC,MAAAA,YAAY,EAAE;AAHV,K;;;;;;;;;;;;;;;;;;uBASgBC,IAAI,E;;;AAAlBN,gBAAAA,M;;uBACiBA,MAAK,CAACO,GAAN,CAAU,YAAV,C;;;AAAjBC,gBAAAA,Q;;AAAyC;AAC/C,oBAAIA,QAAQ,CAACC,IAAb,EAAmB;AACjB;AACA,uBAAKC,QAAL,CAAc;AAAEC,oBAAAA,KAAK,EAAEH,QAAQ,CAACC;AAAlB,mBAAd;AACD;;;;;;;;AAEDG,gBAAAA,KAAK,aAAL;;;;;;;;;;;;;QAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;wCAEuB;AACnB,WAAKC,kBAAL;AACA,WAAKC,YAAL;AACD;;;6BAEK;AAEN,UAAIC,IAAI,GAAG,EAAX;AACA,WAAKb,KAAL,CAAWC,QAAX,CAAoBa,OAApB,CAA4B,UAASC,OAAT,EAAkBC,KAAlB,EAAyB;AACnD,YAAID,OAAO,CAACE,KAAR,CAAcC,WAAd,GAA4BC,OAA5B,CAAoC,KAAKnB,KAAL,CAAWoB,OAAX,CAAmBF,WAAnB,EAApC,MAA0E,CAAC,CAA/E,EAAkF;AAChF,cAAIG,IAAI,GAAG,eAAeN,OAAO,CAACO,GAAlC;AACAT,UAAAA,IAAI,CAACU,IAAL,CAAU,oBAAC,OAAD;AAAS,YAAA,GAAG,EAAER,OAAO,CAACO,GAAtB;AAA2B,0BAAYP,OAAO,CAACO,GAA/C;AAAoD,YAAA,OAAO,EAAE,KAAKE,qBAAlE;AAAyF,YAAA,EAAE,EAAEH,IAA7F;AAAmG,YAAA,SAAS,EAAC,wCAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAuJN,OAAO,CAACE,KAA/J,CAAV;AACD;AACF,OALD;AAOA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCJ,IADD,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKb,KAAL,CAAWE,aADd,EAEG,KAAKF,KAAL,CAAWG,YAFd,CADF,CAJF,CADF;AAaD;;;;EAjFiBP,S;;AAkFrB;AAED,eAAeG,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios'\nimport './Article.css';\n\nclass Article extends Component{\n\n    state = {\n        articles: [],\n        article_title: '',\n        article_body: ''\n    };\n    \n    async refresh() {\n      // AJAX fetch server/node/rest?_format=json and setState with the response data\n      try {\n        const axios = await ajax() // wait for an initialized axios object\n        const response = await axios.get('/node/rest') // wait for the POST AJAX request to complete\n        if (response.data) {\n          // setState will trigger repaint\n          this.setState({ nodes: response.data })\n        }\n        } catch (e) {\n        alert(e)\n      }\n    }\n    // fetchArticle = (nid) =>{\n    //     let id;\n    //     if (nid !== undefined) {\n    //       id = nid;\n    //     }\n    //     else if (this.props.match.params.id !== undefined) {\n    //       id = this.props.match.params.id;\n    //     }\n    //     else {\n    //       id = 40;\n    //     }\n\n    //     this.serverRequest = axios.get('http://backenddrupal.test/' + id + '?_format=json')\n    //     .then(function(result){\n    //       let body = result.data.body[\"0\"].value;\n    //       this.setState({\n    //         article_title: result.data.title[\"0\"].value,\n    //         article_body: body.replace('/sites/default/files', 'http://nohead.test/sites/default/files')\n    //       });\n    //     })\n    //   }\n    \n    //   fetchArticleTitles = () =>{\n\n    //     this.serverRequest = axios.get('http://backenddrupal.test/api/v1/articles/list')\n    //     .then(function(result){\n    //       this.setState({\n    //         articles: result.data\n    //       });\n    //     })\n    //   }\n    \n      componentDidMount () {\n        this.fetchArticleTitles();\n        this.fetchArticle();\n      }\n\n    render(){\n\n      let rows = [];\n      this.state.articles.forEach(function(article, index) {\n        if (article.title.toLowerCase().indexOf(this.state.keyword.toLowerCase()) !== -1) {\n          let path = '/articles/' + article.nid;\n          rows.push(<NavLink key={article.nid} data-value={article.nid} onClick={this.updateSelectedArticle} to={path} className=\"list-group-item list-group-item-action\">{article.title}</NavLink>);\n        }\n      });\n  \n      return (\n        <div>\n          <div>\n          {rows}\n          </div>\n          <div>\n            <div>\n              {this.state.article_title}\n              {this.state.article_body}\n            </div>\n          </div>\n        </div>\n      );\n    };\n};\n\nexport default Article;"]},"metadata":{},"sourceType":"module"}